// <auto-generated />
using System;
using Gbase.CSVAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gbase.CSVAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gbase.CSVAPI.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<long?>("ConditionId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("DealerKey")
                        .HasColumnType("char(36)");

                    b.Property<string>("DealerNotes")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Make")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<long?>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductCase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductCase", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "None"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Hard"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "GigBag"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Original Hard"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Original Soft"
                        });
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductCondition", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Brand New"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Mint"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Near Mint"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Excellent"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Very Good"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Good"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Fair"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Poor"
                        });
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductLink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Label")
                        .HasColumnType("longtext");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLink", (string)null);
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductPicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPicture", (string)null);
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Guitars : Electric Solid Body"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Guitars : Electric Semi-Hollow Body"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Guitars : 12 String Electric & Acoustic"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Guitars : Acoustic"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Guitars : Flattop Electric & Acoustic"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Guitars : Archtop Electric & Acoustic"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Guitars : Classical & Nylon"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Guitars : 7 String"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Guitars : Lap, Pedal & Table"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Guitars : Resonator"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "Guitars : Tenor"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "Guitars : Bass"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "Guitars : Upright Bass"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "Guitars : Hollow Body"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "Amps & Preamps"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "Amp Parts"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "Amp Speakers"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "Amp Tubes"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "Speaker Cabinets"
                        },
                        new
                        {
                            Id = 20L,
                            Name = "Drums & Percussion"
                        },
                        new
                        {
                            Id = 21L,
                            Name = "Bass Speaker Cabinets"
                        },
                        new
                        {
                            Id = 22L,
                            Name = "Bass Amps"
                        },
                        new
                        {
                            Id = 23L,
                            Name = "Band & Orchestra"
                        },
                        new
                        {
                            Id = 24L,
                            Name = "Banjos"
                        },
                        new
                        {
                            Id = 25L,
                            Name = "Effects"
                        },
                        new
                        {
                            Id = 26L,
                            Name = "Mandolin Family"
                        },
                        new
                        {
                            Id = 27L,
                            Name = "P.A. & Sound Reinforcement"
                        },
                        new
                        {
                            Id = 28L,
                            Name = "Pickups"
                        },
                        new
                        {
                            Id = 29L,
                            Name = "Recording Equipment"
                        },
                        new
                        {
                            Id = 30L,
                            Name = "Ukulele & Banjo Ukes"
                        },
                        new
                        {
                            Id = 31L,
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 32L,
                            Name = "Apparel"
                        },
                        new
                        {
                            Id = 33L,
                            Name = "Books, Videos & Instrumental"
                        },
                        new
                        {
                            Id = 34L,
                            Name = "Close Out Items"
                        },
                        new
                        {
                            Id = 35L,
                            Name = "Guitar Parts"
                        },
                        new
                        {
                            Id = 36L,
                            Name = "High End Audio"
                        },
                        new
                        {
                            Id = 37L,
                            Name = "Karaoke"
                        },
                        new
                        {
                            Id = 38L,
                            Name = "Miscellaneous"
                        },
                        new
                        {
                            Id = 39L,
                            Name = "Music Novelities"
                        },
                        new
                        {
                            Id = 40L,
                            Name = "Software"
                        },
                        new
                        {
                            Id = 41L,
                            Name = "Keyboards"
                        },
                        new
                        {
                            Id = 42L,
                            Name = "Cases"
                        });
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.Product", b =>
                {
                    b.HasOne("Gbase.CSVAPI.Entities.ProductCase", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId");

                    b.HasOne("Gbase.CSVAPI.Entities.ProductCondition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId");

                    b.HasOne("Gbase.CSVAPI.Entities.ProductType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Case");

                    b.Navigation("Condition");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductLink", b =>
                {
                    b.HasOne("Gbase.CSVAPI.Entities.Product", null)
                        .WithMany("Links")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.ProductPicture", b =>
                {
                    b.HasOne("Gbase.CSVAPI.Entities.Product", null)
                        .WithMany("Pictures")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("Gbase.CSVAPI.Entities.Product", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Pictures");
                });
#pragma warning restore 612, 618
        }
    }
}
